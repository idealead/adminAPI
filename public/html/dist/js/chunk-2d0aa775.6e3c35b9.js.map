{"version":3,"sources":["webpack:///./src/homeComponents/pixiFunc/renderTemp.js"],"names":["resolve","reject","window_w","window_h","template_name","origin_preview_img","r_app","logoFileId","mainFileId","img_app","mainStage_container","container_arr","active_log","ctrl_arr","material_id","originMian_obj","token","tempId","render_data","canvas_width","canvas_height","project_m_comp","name","chinese","changeTitle","changeSubtitle","changeLogo","changeMain","expand","o_w","o_h","standard","arc_title","arc_subtitle","arc_titleImg","arc_subtitleImg","arc_titleMid","arc_titleMid_index","arc_subtitleMid","arc_subtitleMid_index","split","splitData","father_id","defaultTextFamily","initData","data","me","this","length","o_ratio","new_ratio","height","width","app","tempInit","Promise","parseInt","condition","axios","method","url","headers","then","response","i","material_content","JSON","parse","content","push","children","ass_children","role","id","template_width","template_height","preview_img","initPixiApp","catch","error","view","mainStage","PIXI","position","set","accessible","style","stage","addChild","rectangle","beginFill","drawRect","endFill","renderTemplate","removeChildren","img_src","originMainImg","font_family","k","type","src_from","src","file_id","size","originMian","replacePosition","thisItem","replaceVolution","arc","loader","resources","thistext_obj","includes","fontFamily","text","Array","from","Set","originImg","add","crossOrigin","load","Object","keys","renderF","getfontFamilyBack","setTimeout","err","getAllfontFamily","res","aarr","code","getCssWoff","path","woffPath","dynamicLoadCss","all","cssPath","responseType","head","document","getElementsByTagName","link","createElement","rel","href","appendChild","fontPost","postD","user_id","font_name","my_flag","allArr","key","element_data","association_id","newContainer","_","cloneDeep","newContainerText","wordArr","textReplace","renderARC","renderStage","ass_arr_obj","j","cont","association_name","ass_id","keys_arr","l","createAssociation","m_comp_name","pushActiveLog","saveMould","itemObj","replaceData","filter","item","index","arr","titleType","setData","imgSetData","m","mtext","newD","eachDeg","arc_deg","x0","y0","x","newDeg","newx","newy","direction","y","centerToTop","radius","Math","cos","PI","sin","rotation","callback","leng","test","sprite","texture","normal","set_data","render_add","addContainer","loadSprite","saveLog","addText","container","rotation_num","containerArrAdd","final_index","findFinalIndex","arr1","arr2","arr3","sortContainerArr","len","map","value","array","clear_rotation","my_set_data","addImg","interactive","anchor","cursor","srcData","originalw","originalh","lock","skew","hueNumber","ColorMatrixFilter","hue","filters","alpha","scale","wr","hr","n_ratio","new_scale","findCont","richText","saveSize","rs","fontSize","rl","lineHeight","posi","left","top","ofonts","lineHeightM","textReverse","mypixi","text_num","containerName","buttonMode","renderer","render","render_create","index_arr","sort","a","b","index_min","pivot","splice","createAssociationRect","x_arr","y_arr","vertexData","centerX","centerY","addACtrlarr","a_name","permit","layer_data_example","obj_data_example","log_data","obj","fontStyle","fontWeight","fill","stroke","strokeThickness","dropShadow","dropShadowColor","dropShadowAngle","dropShadowBlur","dropShadowDistance","wordWrap","wordWrapWidth","breakWords","padding","textBaseline","trim","whiteSpace","leading","letterSpacing","align","floor","parent","mould_name","last","getMaterialData","material_data","uploadMaterial","getMd","material_children","material_type","stringify","author","preview","bind","file","toImage","formdata","FormData","append","returnFile","img_arr","backgroundColor","antialias","addImgTwo","img","plugins","extract","base64","dataURLtoFile","reverse","dataurl","filename","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","uploadAllMaterial","materialId","uploadTemp","uploadMF","uploadImgF","wantF","funcData","axiosTempF","tempData","t_width","t_height","level","callbackData","renderTempId","templateId","render_preview_img","savepath","ClippingImage","base64Result","downloadImg","imgsrc","fetch","blob","window","URL","createObjectURL","download","click","revokeObjectURL","base64Codes","quality","Image","canvas","ctx","getContext","createw","createAttribute","createh","nodeValue","setAttributeNode","onload","drawImage","toDataURL"],"mappings":"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","file":"js/chunk-2d0aa775.6e3c35b9.js","sourcesContent":["import axios from 'axios'\r\nimport * as PIXI from 'pixi.js'\r\nimport _ from 'lodash'\r\n\r\n// 参数\r\n// 参数\r\nexport default {\r\n  // promise功能的变量保存\r\n  resolve: null,\r\n  reject: null,\r\n  // promise功能的变量保存\r\n  window_w: 1500,\r\n  window_h: 1500,\r\n  template_name: '',\r\n  origin_preview_img: '',\r\n  r_app: null,\r\n  logoFileId: '',\r\n  mainFileId: '',\r\n  img_app: null,\r\n  mainStage_container: null,\r\n  container_arr: [],\r\n  active_log: [],\r\n  ctrl_arr: [],\r\n  material_id: [],\r\n  // 原始主图尺寸\r\n  originMian_obj: {},\r\n  token: '',\r\n  tempId: 0,\r\n  render_data: [],\r\n  canvas_width: 0,\r\n  canvas_height: 0,\r\n  project_m_comp: [{\r\n    name: 'text',\r\n    chinese: '文案'\r\n  }, {\r\n    name: 'slogan',\r\n    chinese: 'slogan'\r\n  }, {\r\n    name: 'product',\r\n    chinese: '产品图'\r\n  }, {\r\n    name: 'logo',\r\n    chinese: 'logo'\r\n  }, {\r\n    name: 'ornament',\r\n    chinese: '装饰'\r\n  }, {\r\n    name: 'model',\r\n    chinese: '模特'\r\n  }, {\r\n    name: 'code',\r\n    chinese: '二维码'\r\n  }, {\r\n    name: 'other',\r\n    chinese: '版权信息'\r\n  }, {\r\n    name: 'background',\r\n    chinese: '背景'\r\n  }],\r\n  // 普通替换功能参数\r\n  changeTitle: '',\r\n  changeSubtitle: '',\r\n  changeLogo: '',\r\n  changeMain: '',\r\n  // 普通替换功能参数\r\n  expand: false, // 是否扩展\r\n  o_w: 750,\r\n  o_h: 1334,\r\n  standard: '', // 依照宽度来适配\r\n  // 扩展\r\n  arc_title: null, // 弧形主标题文字\r\n  arc_subtitle: null, // 弧形副标题文字\r\n  arc_titleImg: null, // 弧形主标题文字装饰元素位置数据\r\n  arc_subtitleImg: null, // 弧形主副标题文字装饰元素位置数据\r\n  arc_titleMid: '', // 素材id，继续存储\r\n  arc_titleMid_index: 0,\r\n  arc_subtitleMid: '',\r\n  arc_subtitleMid_index: 0,\r\n  split: false,\r\n  splitData: [],\r\n  father_id: '', // 根模板id\r\n  defaultTextFamily: 'defaultSTSong',\r\n  initData: function (data) {\r\n    const me = this\r\n    // 重置参数\r\n    me.mainStage_container = null\r\n    me.container_arr.length = 0\r\n    me.active_log.length = 0\r\n    me.ctrl_arr.length = 0\r\n    me.template_name = ''\r\n    me.render_data.length = 0\r\n    me.origin_preview_img = ''\r\n    me.changeTitle = ''\r\n    me.changeSubtitle = ''\r\n    me.changeLogo = ''\r\n    me.changeMain = ''\r\n    me.logoFileId = ''\r\n    me.mainFileId = ''\r\n    me.originMian_obj = {}\r\n    me.arc_title = null\r\n    me.arc_subtitle = null\r\n    me.arc_titleImg = null\r\n    me.arc_subtitleImg = null\r\n    me.arc_titleMid = ''\r\n    me.arc_subtitleMid = ''\r\n    me.splitData = []\r\n    if (data.tempId) me.tempId = data.tempId\r\n    if (data.changeTitle) me.changeTitle = data.changeTitle\r\n    if (data.changeSubtitle) me.changeSubtitle = data.changeSubtitle\r\n    if (data.changeLogo) me.changeLogo = data.changeLogo\r\n    if (data.changeMain) me.changeMain = data.changeMain\r\n    if (data.logoFileId) me.logoFileId = data.logoFileId\r\n    if (data.mainFileId) me.mainFileId = data.mainFileId\r\n    if (data.token) me.token = data.token\r\n    if (data.expand) { // 模板扩展尺寸功能\r\n      // 设置比例基准\r\n      me.expand = data.expand\r\n      let o_ratio = me.o_h / me.o_w\r\n      let new_ratio = data.height / data.width\r\n      if (new_ratio >= o_ratio) {\r\n        me.standard = 'width'\r\n      } else {\r\n        me.standard = 'height'\r\n      }\r\n    } else {\r\n      me.expand = false\r\n    }\r\n    // 裂变功能\r\n    if (data.split && data.splitData && data.splitData.length > 0) {\r\n      me.split = data.split\r\n      me.splitData = data.splitData\r\n    }\r\n    me.r_app = data.app\r\n  },\r\n  tempInit: function (data) {\r\n    const me = this\r\n    return new Promise(function (resolve, reject) {\r\n      me.resolve = resolve\r\n      me.reject = reject\r\n      me.initData(data)\r\n      me.tempId = parseInt(me.tempId)\r\n      let condition = me.split ? 2 : 1 // 查询普通模板值为1，裂变专属模板值为2\r\n      axios({\r\n        method: 'post',\r\n        url: `//ht.idealead.hbindex.com/api/template/find_template_by_id/template_id/${me.tempId}.html`,\r\n        data: {\r\n          condition: condition\r\n        },\r\n        headers: { 'my_flag': '1' }\r\n      }).then(function (response) {\r\n        // let render_data = [];\r\n        for (let i = 0; i < response.data.data.material_content.length; i++) {\r\n          let material_content = JSON.parse(response.data.data.material_content[i].content)\r\n          me.render_data.push(material_content)\r\n          // 获取模板中的字体，进行加载\r\n          // 弧形文字要记录index，保存成新模板时按原index插入\r\n          if (material_content.children[0].ass_children[0].role == 'arc_title') {\r\n            me.arc_titleMid = JSON.parse(response.data.data.material_content[i].id)\r\n            me.arc_titleMid_index = i\r\n          } else if (material_content.children[0].ass_children[0].role == 'arc_subtitle') {\r\n            me.arc_subtitleMid = JSON.parse(response.data.data.material_content[i].id)\r\n            me.arc_subtitleMid_index = i\r\n          }\r\n        }\r\n        // 设置模板宽高，名字\r\n        me.canvas_width = me.expand ? parseInt(data.width) : parseInt(response.data.data.template_width)\r\n        me.canvas_height = me.expand ? parseInt(data.height) : parseInt(response.data.data.template_height)\r\n        me.template_name = response.data.data.template_name\r\n        me.origin_preview_img = response.data.data.preview_img\r\n        // 设置根id\r\n        me.father_id = response.data.data.father_id\r\n        // 执行方法\r\n        me.initPixiApp()\r\n      }).catch(function (error) {\r\n        me.reject(error)\r\n      })\r\n    })\r\n  },\r\n  initPixiApp: function () {\r\n    const me = this\r\n    me.r_app.view.id = 'pixiCanvas'\r\n    // 创建主内容容器，包含所有内容，固定尺寸，container_arr作为其子元素\r\n    let mainStage = new PIXI.Container()\r\n    mainStage.width = me.canvas_width\r\n    mainStage.height = me.canvas_height\r\n    mainStage.position.set((me.window_w - me.canvas_width) / 2, (me.window_h - me.canvas_height) / 2)\r\n    mainStage.accessible = true\r\n    me.mainStage_container = mainStage\r\n    me.r_app.view.style.width = me.window_w + 'px'\r\n    me.r_app.view.style.height = me.window_h + 'px'\r\n    me.r_app.stage.addChild(me.mainStage_container)\r\n    me.r_app.stage.width = me.window_w\r\n    me.r_app.stage.height = me.window_h\r\n    let rectangle = new PIXI.Graphics()\r\n    rectangle.beginFill(0xE6E6FA, 0)\r\n    rectangle.drawRect(0, 0, me.window_w, me.window_h)\r\n    rectangle.endFill()\r\n    rectangle.position.set(0, 0)\r\n    me.r_app.stage.addChild(rectangle)\r\n    // 执行方法\r\n    me.renderTemplate()\r\n  },\r\n  renderTemplate: function () {\r\n    const me = this\r\n    let data = me.render_data\r\n    me.r_app.stage.children[0].removeChildren()\r\n\r\n    // 获取数据，先渲染图片和文字，再对相应的组合进行渲染\r\n    // 收集模版中每个模块的首要组合的资源进入缓存\r\n    let img_src = []\r\n    let originMainImg = ''\r\n    let font_family = {} // 文字字体集合\r\n    for (let i = 0; i < data.length; i++) {\r\n      for (let k = 0; k < data[i].children[0].ass_children.length; k++) {\r\n        if (data[i].children[0].ass_children[k].type == 'image' || data[i].children[0].ass_children[k].type == 'svg') {\r\n          // 判断是否是有替换logo和主图\r\n          let src_from = data[i].children[0].ass_children[k].src\r\n          if (data[i].children[0].ass_children[k].role == 'logo' && me.changeLogo && me.changeLogo !== '') {\r\n            src_from = me.changeLogo\r\n            data[i].children[0].ass_children[k].file_id = me.logoFileId\r\n            data[i].children[0].ass_children[k].src = me.changeLogo\r\n          }\r\n          if (data[i].children[0].ass_children[k].role == 'main' && me.changeMain && me.changeMain !== '') {\r\n            originMainImg = src_from\r\n\r\n            if (data[i].children[0].ass_children[k].size && data[i].children[0].ass_children[k].size.width && data[i].children[0].ass_children[k].size.height) {\r\n              let originMian = {\r\n                width: null,\r\n                height: null\r\n              }\r\n              // size.width 应该为缩放后的大小，不一定是原大小，最小200*200\r\n              originMian.width = data[i].children[0].ass_children[k].size.width < 200 ? 200 : data[i].children[0].ass_children[k].size.width\r\n              originMian.height = data[i].children[0].ass_children[k].size.height < 200 ? 200 : data[i].children[0].ass_children[k].size.height\r\n              me.originMian_obj[`${data[i].children[0].ass_children[k].id}`] = originMian\r\n            }\r\n            src_from = me.changeMain\r\n            data[i].children[0].ass_children[k].file_id = me.mainFileId\r\n            data[i].children[0].ass_children[k].src = me.changeMain\r\n          }\r\n          // 判断是否是有替换logo和主图↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑\r\n          // 判断是否是弧形标题的装饰，或者弧形副标题装饰,普通渲染保存数据，裂变时需要替换数据↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\r\n          if (data[i].children[0].ass_children[k].role == 'arc_titleImg' || data[i].children[0].ass_children[k].role == 'arc_subtitleImg') {\r\n            if (me.splitData && (data[i].children[0].ass_children[k].replacePosition || data[i].children[0].ass_children[k].replacePosition == 0) && me.split) {\r\n              // 裂变的，需要替换数据\r\n              let thisItem = data[i].children[0].ass_children[k];\r\n              [thisItem.file_id, thisItem.src, thisItem.size, thisItem.arc] = me.replaceVolution(thisItem, 'arc')\r\n              src_from = data[i].children[0].ass_children[k].src\r\n            }\r\n            if (data[i].children[0].ass_children[k].role == 'arc_titleImg') {\r\n              // 弧形数据要根据file_id查询，然后插入\r\n              me.arc_titleImg = data[i].children[0].ass_children[k]\r\n            } else if (data[i].children[0].ass_children[k].role == 'arc_subtitleImg') {\r\n              me.arc_subtitleImg = data[i].children[0].ass_children[k]\r\n            }\r\n          }\r\n          // 判断是否是弧形标题的装饰，或者弧形副标题装饰↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑\r\n          // 裂变数据替换，除去弧形标题，弧形副标题图片↓↓↓↓↓↓↓↓↓↓↓↓↓\r\n          if ((data[i].children[0].ass_children[k].replacePosition || data[i].children[0].ass_children[k].replacePosition == 0) && me.split && data[i].children[0].ass_children[k].role != 'arc_titleImg' && data[i].children[0].ass_children[k].role != 'arc_subtitleImg') {\r\n            [data[i].children[0].ass_children[k].file_id, data[i].children[0].ass_children[k].src] = me.replaceVolution(data[i].children[0].ass_children[k], 'normal')\r\n            src_from = data[i].children[0].ass_children[k].src\r\n          }\r\n          if (!me.r_app.loader.resources[src_from]) {\r\n            img_src.push(src_from)\r\n          }\r\n        }\r\n        // 获取模板中的字体，进行加载\r\n        if (data[i].children[0].ass_children[k].type == 'text') {\r\n          let thistext_obj = data[i].children[0].ass_children[k]\r\n          if (me.defaultTextFamily.includes(thistext_obj.style.fontFamily)) {\r\n            continue\r\n          }\r\n          font_family[`${thistext_obj.style.fontFamily}`] =\r\n            (font_family[`${thistext_obj.style.fontFamily}`] ? font_family[`${thistext_obj.style.fontFamily}`] : '') +\r\n            thistext_obj.text\r\n        }\r\n      }\r\n    }\r\n    img_src = Array.from(new Set(img_src))\r\n    me.originImg(originMainImg, function () {\r\n      me.r_app.loader.add(img_src, {\r\n        crossOrigin: true\r\n      }).load(function () {\r\n        // 图片加载完毕，开始加载字体\r\n        if (Object.keys(font_family).length === 0) {\r\n          me.renderF(data)\r\n        } else {\r\n          // 字体加载\r\n          me.getfontFamilyBack(font_family).then(() => {\r\n            setTimeout(() => {\r\n              me.renderF(data)\r\n            }, 50)\r\n          }).catch(err => {\r\n            me.reject(err)\r\n          })\r\n        }\r\n      })\r\n    })\r\n    // if (Object.keys(font_family).length === 0) {\r\n    //   img_src = Array.from(new Set(img_src))\r\n    //   me.originImg(originMainImg, function () {\r\n    //     me.r_app.loader.add(img_src, {\r\n    //       crossOrigin: true\r\n    //     }).load(function () {\r\n    //       me.renderF(data)\r\n    //     })\r\n    //   })\r\n    //   return false\r\n    // }\r\n    // // 字体加载\r\n    // me.getfontFamilyBack(font_family).then(() => {\r\n    //   setTimeout(() => {\r\n    //     // 字体加载完毕回调\r\n    //     img_src = Array.from(new Set(img_src))\r\n    //     me.originImg(originMainImg, function () {\r\n    //       me.r_app.loader.add(img_src, {\r\n    //         crossOrigin: true\r\n    //       }).load(function () {\r\n    //         me.renderF(data)\r\n    //       })\r\n    //     })\r\n    //   }, 50)\r\n    // }).catch(err => {\r\n    //   me.reject(err)\r\n    // })\r\n  },\r\n  getfontFamilyBack: function (font_family) {\r\n    const me = this\r\n    return new Promise(function (resolve, reject) {\r\n      me.getAllfontFamily(font_family)\r\n        .then(function (res) {\r\n          if (res === 'stf') {\r\n            resolve()\r\n            return false\r\n          }\r\n          let aarr = []\r\n          // 加载css文件，从而自动加载woff文件\r\n          for (let i = 0; i < res.length; i++) {\r\n            if (res[i].data.code !== 1) continue\r\n            aarr = [...aarr, ...me.getCssWoff(res[i].data.path, res[i].data.woffPath)]\r\n            me.dynamicLoadCss('//font.idealead.hbindex.com' + res[i].data.path)\r\n          }\r\n          axios\r\n            .all(aarr)\r\n            .then(function (response) {\r\n              // 下方的linkcss，以及字体的加载读缓存就好了。\r\n              setTimeout(() => {\r\n                // 字体加载完毕回调\r\n                resolve()\r\n              }, 200)\r\n            })\r\n            .catch(res => {\r\n              reject(res)\r\n            })\r\n        })\r\n        .catch(res => {\r\n          reject(res)\r\n        })\r\n    })\r\n  },\r\n  getCssWoff: function (cssPath, woffPath) {\r\n    // const me = this\r\n    return [\r\n      axios({\r\n        headers: {\r\n          'Accept': 'text/css,*/*;q=0.1'\r\n        },\r\n        method: 'get',\r\n        url: `//font.idealead.hbindex.com${cssPath}?my_flag=1`,\r\n        responseType: 'ms-stream'\r\n      }),\r\n      axios({\r\n        method: 'get',\r\n        url: `//font.idealead.hbindex.com${woffPath}`,\r\n        responseType: 'ms-stream'\r\n      })\r\n    ]\r\n  },\r\n  dynamicLoadCss: function (url) {\r\n    var head = document.getElementsByTagName('head')[0]\r\n    var link = document.createElement('link')\r\n    link.type = 'text/css'\r\n    link.rel = 'stylesheet'\r\n    link.href = `${url}?my_flag=1`\r\n    head.appendChild(link)\r\n  },\r\n  fontPost: function (data) {\r\n    // const me = this\r\n    // id为1则表示，是用户端，模板列表渲染使用的字体剪切\r\n    let postD = {\r\n      user_id: 1,\r\n      font_name: data.font_name,\r\n      text: data.text,\r\n      my_flag: 1\r\n    }\r\n    // 压缩字体接口函数\r\n    return axios({\r\n      method: 'post',\r\n      url: '//papi.idealead.hbindex.com/cutFont',\r\n      data: postD,\r\n      headers: { 'my_flag': '1' }\r\n    })\r\n  },\r\n  getAllfontFamily: function (font_family) {\r\n    const me = this\r\n    let allArr = []\r\n    for (let key in font_family) {\r\n      if (!me.defaultTextFamily.includes(key)) {\r\n        allArr.push(\r\n          me.fontPost({\r\n            font_name: `${key}`,\r\n            text: font_family[key]\r\n          })\r\n        )\r\n      }\r\n    }\r\n    return axios.all(allArr)\r\n  },\r\n  renderF: function (data) {\r\n    const me = this\r\n    for (let i = 0; i < data.length; i++) {\r\n      for (let k = 0; k < data[i].children[0].ass_children.length; k++) {\r\n        let element_data = data[i].children[0].ass_children[k]\r\n        element_data.association_id = data[i].children[0].association_id\r\n        if (data[i].children[0].ass_children[k].type == 'image' || data[i].children[0].ass_children[k].type == 'svg') {\r\n          // 增加图片父级，添加图片并设置图片\r\n          me.newContainer(element_data, true)\r\n        } else if (data[i].children[0].ass_children[k].type == 'text') {\r\n          if (element_data.role == 'title' && me.changeTitle !== '') {\r\n            element_data.text = me.changeTitle\r\n          }\r\n          if (element_data.role == 'subtitle' && me.changeSubtitle !== '') element_data.text = me.changeSubtitle\r\n          if (element_data.role == 'arc_title') {\r\n            me.arc_title = _.cloneDeep(element_data)\r\n            if (me.changeTitle) me.arc_title.text = me.changeTitle\r\n          } else if (element_data.role == 'arc_subtitle') {\r\n            me.arc_subtitle = _.cloneDeep(element_data)\r\n            if (me.changeSubtitle) me.arc_subtitle.text = me.changeSubtitle\r\n          } else {\r\n            // 弧形文字直接利用之前的素材id\r\n            me.newContainerText(element_data, true)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // 判断有没有弧形文字，渲染弧形文字,弧形单个文字只用于预览图，简单渲染******************************************************************************************************************************\r\n    if (me.arc_title && me.arc_titleImg) {\r\n      let wordArr = me.arc_title.text.split('')\r\n      let textReplace = typeof (me.arc_title.textReplace) === 'number' ? me.arc_title.textReplace : null\r\n      me.renderARC('arc_title', wordArr, textReplace)\r\n    }\r\n    if (me.arc_subtitle && me.arc_subtitleImg) {\r\n      let wordArr = me.arc_subtitle.text.split('')\r\n      let textReplace = typeof (me.arc_subtitle.textReplace) === 'number' ? me.arc_subtitle.textReplace : null\r\n      me.renderARC('arc_subtitle', wordArr, textReplace)\r\n    }\r\n    // 判断有没有弧形文字，渲染弧形文字********************************************************************************************************************************\r\n    me.renderStage()\r\n    // 渲染组合矩形\r\n    let ass_arr_obj = {}\r\n    for (let j = 0; j < me.container_arr.length; j++) {\r\n      if (me.container_arr[j].cont.children[0].association_name !== '') {\r\n        let ass_id = me.container_arr[j].cont.children[0].association_name\r\n        if (ass_arr_obj[ass_id]) { } else {\r\n          ass_arr_obj[ass_id] = []\r\n        }\r\n        ass_arr_obj[ass_id].push(me.container_arr[j].cont.children[0])\r\n      }\r\n    }\r\n    let keys_arr = Object.keys(ass_arr_obj)\r\n    if (keys_arr.length > 0) {\r\n      for (let l = 0; l < keys_arr.length; l++) {\r\n        let key = keys_arr[l]\r\n        me.ctrl_arr = ass_arr_obj[key]\r\n        me.createAssociation(key, ass_arr_obj[key][0].m_comp_name, true)\r\n      }\r\n      // 渲染\r\n      me.renderStage()\r\n      if (me.ctrl_arr) me.ctrl_arr.length = 0\r\n    }\r\n\r\n    // 存储进活动日志\r\n    me.pushActiveLog(true)\r\n    setTimeout(() => {\r\n      me.saveMould(me.template_name)\r\n    }, 20)\r\n  },\r\n  replaceVolution: function (itemObj, type) {\r\n    const me = this\r\n    let replaceData = me.splitData.filter(function (item, index, arr) {\r\n      if (item.position == itemObj.replacePosition) return item\r\n    })\r\n    if (type == 'arc') {\r\n      return [replaceData[0].file_id, replaceData[0].src, replaceData[0].size, replaceData[0].arc]\r\n    } else {\r\n      return [replaceData[0].file_id, replaceData[0].src]\r\n    }\r\n  },\r\n  renderARC: function (titleType, wordArr, textReplace) {\r\n    const me = this\r\n    let setData = null\r\n    let imgSetData = null\r\n    if (titleType == 'arc_title') {\r\n      setData = _.cloneDeep(me.arc_title)\r\n      // imgSetData = {\r\n      //   position: {\r\n      //     x: 375,\r\n      //     y: 750\r\n      //   },\r\n      //   size: {\r\n      //     width: 300,\r\n      //     height: 100\r\n      //   },\r\n      //   arc: {\r\n      //     arc_deg: 80,\r\n      //     radius: 500,\r\n      //     centerToTop: 50,\r\n      //     direction: 'up'\r\n      //   }\r\n      // }\r\n      imgSetData = {\r\n        position: _.cloneDeep(me.arc_titleImg.position),\r\n        size: {\r\n          width: me.arc_titleImg.size.width,\r\n          height: me.arc_titleImg.size.height\r\n        },\r\n        arc: _.cloneDeep(me.arc_titleImg.arc)\r\n      }\r\n    } else if (titleType == 'arc_subtitle') {\r\n      setData = _.cloneDeep(me.arc_subtitle)\r\n      imgSetData = {\r\n        position: _.cloneDeep(me.arc_subtitleImg.position),\r\n        size: {\r\n          width: me.arc_subtitleImg.size.width,\r\n          height: me.arc_subtitleImg.size.height\r\n        },\r\n        arc: _.cloneDeep(me.arc_subtitleImg.arc)\r\n      }\r\n    }\r\n    for (let m = 1; m <= wordArr.length; m++) {\r\n      let mtext = wordArr[m - 1] // 拆分的单个文字\r\n      // 深拷贝arc_title改变其中ID、文字、位置、角度\r\n      let newD = _.cloneDeep(setData)\r\n      newD.id += `${m}`\r\n      // 计算圆弧位置\r\n      let eachDeg = parseInt(imgSetData.arc.arc_deg) / wordArr.length / 2 // 每个文字间隔的角度\r\n      let x0; let y0 = 0 // 圆心\r\n      x0 = imgSetData.position.x\r\n      let newDeg = 90 + (parseInt(imgSetData.arc.arc_deg) / 2) // 文字起始角度,计算完位置后设置成单个字的旋转角度，已y轴为中心\r\n      let newx; let newy = 0\r\n      if (imgSetData.arc.direction == 'down') {\r\n        y0 = imgSetData.position.y - (imgSetData.size.height / 2) + parseInt(imgSetData.arc.centerToTop) + parseInt(imgSetData.arc.radius)\r\n        newx = x0 + (parseInt(imgSetData.arc.radius) * Math.cos((-eachDeg * (2 * m - 1) + newDeg) * Math.PI / 180))\r\n        newy = y0 - (parseInt(imgSetData.arc.radius) * Math.sin((-eachDeg * (2 * m - 1) + newDeg) * Math.PI / 180))\r\n        newDeg = (90 - (newDeg - eachDeg * (2 * m - 1))) * Math.PI / 180\r\n      } else {\r\n        newDeg = -newDeg\r\n        y0 = imgSetData.position.y + (imgSetData.size.height / 2) - parseInt(imgSetData.arc.centerToTop) - parseInt(imgSetData.arc.radius)\r\n        newx = x0 + (parseInt(imgSetData.arc.radius) * Math.cos((eachDeg * (2 * m - 1) + newDeg) * Math.PI / 180))\r\n        newy = y0 - (parseInt(imgSetData.arc.radius) * Math.sin((eachDeg * (2 * m - 1) + newDeg) * Math.PI / 180))\r\n        newDeg = (-90 - (newDeg + eachDeg * (2 * m - 1))) * Math.PI / 180\r\n      }\r\n      // 设置新数据，渲染成新图层\r\n      newD.position.x = newx\r\n      newD.position.y = newy\r\n      newD.text = mtext\r\n      newD.rotation = newDeg\r\n      newD.role = 'normal'\r\n      newD.textReplace = textReplace\r\n      me.newContainerText(newD, true, true)// 渲染后的弧形文字不保存进入日志，所以不会留下数据\r\n    }\r\n  },\r\n  originImg: function (src, callback) {\r\n    const me = this\r\n    if (src == '') {\r\n      callback()\r\n    } else {\r\n      let leng = Object.keys(me.originMian_obj)\r\n      leng = leng.length\r\n      if (leng > 0) {\r\n        callback()\r\n      } else {\r\n        me.r_app.loader.add(src, {\r\n          crossOrigin: true\r\n        }).load(function () {\r\n          if (/.svg$/.test(src)) {\r\n            // me.loadSvgImg(src, sprite, my_set_data, render_add)\r\n          } else {\r\n            let sprite = new PIXI.Sprite(me.r_app.loader.resources[src].texture)\r\n            me.originMian_obj.normal = {\r\n              width: 0,\r\n              height: 0\r\n            }\r\n            me.originMian_obj.normal.width = sprite.width < 200 ? 200 : sprite.width\r\n            me.originMian_obj.normal.height = sprite.height < 200 ? 200 : sprite.height\r\n            callback()\r\n          }\r\n        })\r\n      }\r\n    }\r\n  },\r\n  newContainer: function (set_data, render_add) {\r\n    // 增加新图层新元素\r\n    const me = this\r\n    set_data.type = 'image'\r\n    // set_data.file_id = set_data.file_id\r\n    set_data.id = `${set_data.id}`\r\n    me.addContainer(set_data, set_data.position)\r\n    me.loadSprite(set_data, render_add)\r\n  },\r\n  newContainerText: function (set_data, render_add, saveLog = true) {\r\n    // savelog为false，简单渲染只为生成模板预览图，不参与加入素材保存模板\r\n    const me = this\r\n    set_data.type = 'text'\r\n    set_data.id = `${set_data.id}`\r\n    me.addContainer(set_data, set_data.position, saveLog)\r\n    me.addText(set_data, render_add, saveLog)\r\n  },\r\n  addContainer: function (set_data, position, saveLog = true) {\r\n    // savelog为false，简单渲染只为生成模板预览图，不参与加入素材保存模板\r\n    const me = this\r\n    let container = new PIXI.Container()\r\n    container.width = me.canvas_width\r\n    container.height = me.canvas_height\r\n\r\n    container.position.set(position.x, position.y)\r\n    container.type = `${set_data.type}_c`\r\n    container.rotation_num = 0\r\n    // 按素材模块分类加入，找到此模块中元素的最高层级，在其后面加入\r\n    me.containerArrAdd(set_data.m_comp_name, container, set_data.id, saveLog)\r\n  },\r\n  containerArrAdd: function (m_comp_name, container, id, saveLog) {\r\n    const me = this\r\n    if (saveLog) {\r\n      let final_index = me.findFinalIndex(m_comp_name)\r\n      // 相同模块中最后一个元素的index\r\n      let arr1 = []\r\n      let arr2 = [{\r\n        cont: container,\r\n        index: 0,\r\n        name: id,\r\n        m_comp_name: m_comp_name\r\n      }]\r\n      let arr3 = []\r\n      if (final_index == me.container_arr.length - 1 || (final_index == 0 && me.container_arr.length == 0)) {\r\n        me.container_arr = [...me.container_arr, ...arr2]\r\n      } else {\r\n        for (let i = 0; i < me.container_arr.length; i++) {\r\n          if (i <= final_index) {\r\n            arr1.push(me.container_arr[i])\r\n          } else if (i > final_index) {\r\n            arr3.push(me.container_arr[i])\r\n          }\r\n        }\r\n        me.container_arr = [...arr1, ...arr2, ...arr3]\r\n      }\r\n      me.sortContainerArr(true)\r\n    } else {\r\n      // 简单渲染\r\n      me.container_arr.push({\r\n        cont: container,\r\n        index: 0,\r\n        name: id,\r\n        m_comp_name: m_comp_name\r\n      })\r\n    }\r\n  },\r\n  findFinalIndex: function (m_comp_name) {\r\n    const me = this\r\n    let final_index = -100 // 相同模块中最后一个元素的index\r\n    let len = me.project_m_comp.length - 1\r\n    if (me.container_arr.length == 0) {\r\n      final_index = 0\r\n      return final_index\r\n    } else if (me.project_m_comp[0].name == m_comp_name && me.container_arr.length > 0) {\r\n      final_index = me.container_arr.length - 1\r\n      return final_index\r\n    } else {\r\n      me.container_arr.map(function (value, index, array) {\r\n        if (value.m_comp_name == m_comp_name) {\r\n          final_index = index\r\n        }\r\n      })\r\n      if (final_index == -100) {\r\n        if (me.project_m_comp[len].name == m_comp_name) {\r\n          final_index = -1\r\n          return final_index\r\n        } else {\r\n          for (let i = 0; i < me.project_m_comp.length; i++) {\r\n            if (me.project_m_comp[i].name == m_comp_name) {\r\n              return me.findFinalIndex(me.project_m_comp[i + 1].name)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        return final_index\r\n      }\r\n    }\r\n  },\r\n  sortContainerArr: function (clear_rotation) {\r\n    const me = this\r\n    // 将数组容器里的index排序\r\n    me.container_arr.map(function (value, index, array) {\r\n      value.index = index\r\n      if (clear_rotation && (value.cont.type == 'image_c' || value.cont.type == 'text_c')) {\r\n        value.cont.rotation_num = 0\r\n      }\r\n    })\r\n  },\r\n  loadSprite: function (set_data, render_add) {\r\n    // 加载精灵\r\n    const me = this\r\n    let my_set_data = _.cloneDeep(set_data)\r\n    let src = my_set_data.src\r\n    let sprite\r\n    if (me.r_app.loader.resources[src]) {\r\n      if (/.svg$/.test(src)) {\r\n        // me.loadSvgImg(src, sprite, my_set_data, render_add)\r\n      } else {\r\n        // 缓存过src的就直接新增\r\n        sprite = new PIXI.Sprite(me.r_app.loader.resources[src].texture)\r\n        me.addImg(sprite, my_set_data, render_add)\r\n      }\r\n    }\r\n    // else {\r\n    //   me.p_app.loader.add(src, {\r\n    //     crossOrigin: true\r\n    //   }).load(function() {\r\n    //     if (/.svg$/.test(src)) {\r\n    //       // me.loadSvgImg(src, sprite, my_set_data, render_add)\r\n    //     } else {\r\n    //       sprite = new PIXI.Sprite(me.p_app.loader.resources[src].texture);\r\n    //       me.addImg(sprite, my_set_data, render_add);\r\n    //       me.img_loading = false;\r\n    //       func();\r\n    //     }\r\n    //   });\r\n    // }\r\n  },\r\n  addImg: function (sprite, set_data, render_add) {\r\n    // 添加图片精灵(监听点击，有移动，拉伸功能)精灵名称和容器名称相同\r\n    const me = this\r\n    sprite.interactive = true\r\n    sprite.anchor.set(0.5)\r\n    sprite.cursor = 'grab'\r\n    sprite.name = `${set_data.id}`\r\n    sprite.file_id = set_data.file_id\r\n    sprite.type = 'image' // 精灵类型为图片\r\n    sprite.srcData = set_data.src\r\n    sprite.rotation_num = 0\r\n    sprite.originalw = _.cloneDeep(sprite.width)\r\n    sprite.originalh = _.cloneDeep(sprite.height)\r\n    sprite.position.set(0, 0)\r\n    sprite.association_name = '' // 组合名字，为空说明没有组合\r\n    sprite.m_comp_name = set_data.m_comp_name\r\n    sprite.lock = false\r\n    sprite.role = 'normal'\r\n    // 倾斜功能\r\n    if (set_data.skew) {\r\n      sprite.skew.set(set_data.skew.x, set_data.skew.y)\r\n    }\r\n    if (typeof (set_data.hueNumber) === 'number') {\r\n      sprite.hueNumber = set_data.hueNumber\r\n      set_data.hueNumber *= 360\r\n      let filter = new PIXI.filters.ColorMatrixFilter()\r\n      filter.hue(set_data.hueNumber, true)\r\n      sprite.filters = [filter]\r\n    }\r\n    if (render_add) {\r\n      sprite.rotation = set_data.rotation\r\n      sprite.rotation_num = set_data.rotation\r\n      sprite.alpha = set_data.alpha\r\n      sprite.scale.set(set_data.scale)\r\n      sprite.association_name = set_data.association_id\r\n      sprite.role = set_data.role\r\n    }\r\n    // 替换\r\n    if (sprite.role == 'logo' && me.changeLogo) {\r\n      if (sprite.width >= sprite.height) {\r\n        // 扁的logo\r\n        if (sprite.width > set_data.size.width) {\r\n          let wr = set_data.size.width < 50 ? 50 : set_data.size.width\r\n          sprite.scale.set(wr / sprite.width)\r\n        }\r\n      } else {\r\n        // 竖一些的logo\r\n        if (sprite.height > set_data.size.height) {\r\n          let hr = set_data.size.height < 70 ? 70 : set_data.size.height\r\n          sprite.scale.set(hr / sprite.height)\r\n        }\r\n      }\r\n    } else if (sprite.role == 'main' && me.originMian_obj[`${set_data.id}`]) {\r\n      let o_ratio = me.originMian_obj[`${set_data.id}`].width / me.originMian_obj[`${set_data.id}`].height\r\n      let n_ratio = sprite.originalw / sprite.originalh\r\n      if (n_ratio >= o_ratio) {\r\n        sprite.scale.set(me.originMian_obj[`${set_data.id}`].width / sprite.originalw)\r\n      } else {\r\n        sprite.scale.set(me.originMian_obj[`${set_data.id}`].height / sprite.originalh)\r\n      }\r\n    } else if (sprite.role == 'main' && me.originMian_obj.normal) {\r\n      let o_ratio = me.originMian_obj.normal.width / me.originMian_obj.normal.height\r\n      let n_ratio = sprite.originalw / sprite.originalh\r\n      if (n_ratio >= o_ratio) {\r\n        sprite.scale.set(me.originMian_obj.normal.width / sprite.originalw)\r\n      } else {\r\n        sprite.scale.set(me.originMian_obj.normal.height / sprite.originalh)\r\n      }\r\n    }\r\n    // 替换\r\n    // 扩展骨架A竖版：******************************************************************************************************************************//\r\n    // 大小\r\n    if (me.expand) {\r\n      if ((me.standard == 'width' && sprite.role != 'bg') || (me.standard == 'height' && sprite.role == 'bg')) {\r\n        let new_scale = set_data.scale * me.canvas_width / me.o_w\r\n        sprite.scale.set(new_scale)\r\n      } else if ((me.standard == 'height' && sprite.role != 'bg') || (me.standard == 'width' && sprite.role == 'bg')) {\r\n        let new_scale = set_data.scale * me.canvas_height / me.o_h\r\n        sprite.scale.set(new_scale)\r\n      }\r\n      // 位置\r\n      me.container_arr[me.findCont(set_data.id)].cont.position.set((set_data.position.x / me.o_w) * me.canvas_width, (set_data.position.y / me.o_h) * me.canvas_height)\r\n      // 扩展骨架A竖版：******************************************************************************************************************************//\r\n    } else {\r\n      me.container_arr[me.findCont(set_data.id)].cont.addChild(sprite)\r\n    }\r\n  },\r\n  addText: function (set_data, render_add, saveLog) {\r\n    const me = this\r\n    let richText = null\r\n    // 扩展骨架A竖版：******************************************************************************************************************************//\r\n    if (me.expand) {\r\n      let saveSize = false\r\n      if (me.standard == 'width') {\r\n        // 大小\r\n        if ((set_data.size.width / me.o_w) + 0.1 >= (set_data.size.width / me.canvas_width) && (set_data.size.width / me.canvas_width) < 1) {\r\n          saveSize = true\r\n        } else {\r\n          let rs = set_data.style.fontSize / me.o_w\r\n          let rl = set_data.style.lineHeight / me.o_w\r\n          set_data.style.fontSize = me.canvas_width * rs\r\n          set_data.style.lineHeight = me.canvas_width * rl\r\n        }\r\n      } else {\r\n        if ((set_data.size.height / me.o_h) + 0.1 >= (set_data.size.height / me.canvas_height) && (set_data.size.height / me.canvas_height) < 1) {\r\n          saveSize = true\r\n        } else {\r\n          let rs = set_data.style.fontSize / me.o_h\r\n          let rl = set_data.style.lineHeight / me.o_h\r\n          set_data.style.fontSize = me.canvas_width * rs\r\n          set_data.style.lineHeight = me.canvas_width * rl\r\n        }\r\n      }\r\n      richText = new PIXI.Text(`${set_data.text}`, set_data.style)\r\n      if (set_data.role == 'title' || set_data.role == 'subtitle') {\r\n        // 位置\r\n        let posi = { x: 0, y: 0 }\r\n        let left = 0\r\n        let top = 0\r\n        if (me.standard == 'width') {\r\n          left = 50 / me.o_w\r\n          top = me.canvas_width * left * 3 / 2\r\n          left = me.canvas_width * left\r\n        } else {\r\n          top = 75 / me.o_h\r\n          left = me.canvas_height * top / 3 * 2\r\n          top = me.canvas_height * top\r\n        }\r\n        posi.x = left + (richText.width / 2)\r\n        posi.y = top + (richText.height / 2)\r\n        if (set_data.role == 'subtitle') {\r\n          posi.y += saveSize ? 75 : (75 / me.o_h) * me.canvas_height\r\n        }\r\n        me.container_arr[me.findCont(set_data.id)].cont.position.set(posi.x, posi.y)\r\n      } else {\r\n        me.container_arr[me.findCont(set_data.id)].cont.position.set((set_data.position.x / me.o_w) * me.canvas_width, (set_data.position.y / me.o_h) * me.canvas_height)\r\n      }\r\n    } else {\r\n      richText = new PIXI.Text(`${set_data.text}`, set_data.style)\r\n    }\r\n\r\n    richText.interactive = true\r\n    richText.anchor.set(0.5)\r\n    richText.cursor = 'grab'\r\n    richText.name = set_data.id\r\n    richText.type = 'text' // 精灵类型为文本\r\n    richText.rotation_num = 0\r\n    richText.originalw = richText.width\r\n    richText.originalh = richText.height\r\n    richText.ofonts = richText.style.fontSize\r\n    richText.position.set(0, 0)\r\n    richText.lineHeightM = 10\r\n    richText.association_name = '' // 组合名字，为空说明没有组合\r\n    richText.m_comp_name = set_data.m_comp_name\r\n    richText.lock = false\r\n    richText.role = 'normal'\r\n    // 倾斜功能\r\n    if (set_data.skew) {\r\n      richText.skew.set(set_data.skew.x, set_data.skew.y)\r\n    }\r\n    // 文案替换功能\r\n    if (typeof (set_data.textReplace) === 'number') {\r\n      richText.textReplace = set_data.textReplace\r\n    }\r\n    // 文本倒序\r\n    if (set_data.textReverse) {\r\n      richText.textReverse = true\r\n    }\r\n    // 色相功能\r\n    if (typeof (set_data.hueNumber) === 'number') {\r\n      richText.hueNumber = set_data.hueNumber\r\n      set_data.hueNumber *= 360\r\n      let filter = new me.mypixi.filters.ColorMatrixFilter()\r\n      filter.hue(set_data.hueNumber, true)\r\n      richText.filters = [filter]\r\n    }\r\n    if (render_add) {\r\n      richText.rotation = set_data.rotation\r\n      richText.rotation_num = set_data.rotation\r\n      richText.alpha = set_data.alpha\r\n      richText.association_name = set_data.association_id\r\n      richText.ofonts = set_data.style.fontSize\r\n      richText.role = set_data.role\r\n    }\r\n    if (!saveLog) richText.type = 'notSave'\r\n    me.container_arr[me.findCont(set_data.id)].cont.addChild(richText)\r\n    if (set_data.text_num) {\r\n      richText.text_num = set_data.text_num\r\n    } else {\r\n      richText.text_num = richText.width / richText.style.fontSize\r\n    }\r\n    //* ********\r\n  },\r\n  findCont: function (containerName) {\r\n    // 组合矩形父容器name为组合id，临时组合矩形父容器name为temporary_c，其他父容器name为id\r\n    const me = this\r\n    let index = -1\r\n    for (let i = 0; i < me.container_arr.length; i++) {\r\n      if (me.container_arr[i].name == containerName) {\r\n        index = i\r\n      }\r\n    }\r\n    return index\r\n  },\r\n  renderStage: function () {\r\n    const me = this\r\n    me.r_app.stage.children[0].removeChildren()\r\n    //\r\n\r\n    for (let i = 0; i < me.container_arr.length; i++) {\r\n      // 按顺序渲染容器\r\n      me.mainStage_container.addChild(me.container_arr[i].cont)\r\n      me.container_arr[i].cont.buttonMode = false\r\n    }\r\n    //\r\n    me.r_app.renderer.render(me.r_app.stage)\r\n  },\r\n  createAssociation: function (name, m_comp_name, render_create) {\r\n    const me = this\r\n    // 对组合元素进行排序，全部移动至组合中最高层之下，并维持原组合内顺序\r\n    // 找到组合中最高级\r\n    let index_arr = []\r\n    for (let i = 0; i < me.ctrl_arr.length; i++) {\r\n      index_arr.push(me.findCont(me.ctrl_arr[i].name))\r\n    }\r\n    index_arr.sort(function (a, b) {\r\n      return a - b\r\n    })\r\n    // 保存原container_arr中组合最高级之前除去组合中的元素\r\n    let arr1 = []\r\n    let arr2 = []\r\n    let arr3 = []\r\n    for (let i = 0; i < me.container_arr.length; i++) {\r\n      if (i < index_arr[index_arr.length - 1]) {\r\n        if (me.container_arr[i].cont.children[0].association_name !== name) {\r\n          arr1.push(me.container_arr[i])\r\n        }\r\n      } else if (i > index_arr[index_arr.length - 1]) {\r\n        if (me.container_arr[i].cont.children[0].association_name !== name) {\r\n          arr3.push(me.container_arr[i])\r\n        }\r\n      }\r\n      if (me.container_arr[i].cont.children[0].association_name == name) {\r\n        arr2.push(me.container_arr[i])\r\n      }\r\n    }\r\n    me.container_arr = [...arr1, ...arr2, ...arr3]\r\n    // 将数组容器里的index排序\r\n    me.sortContainerArr(true)\r\n    let index_min = -1\r\n    for (let i = 0; i < me.container_arr.length; i++) {\r\n      if (me.container_arr[i].cont.children[0].association_name == name) {\r\n        index_min = i\r\n        break\r\n      }\r\n    }\r\n    // 创建组合空白矩形\r\n    let container = new PIXI.Container()\r\n    container.width = me.canvas_width\r\n    container.height = me.canvas_height\r\n    container.pivot.set(0, 0)\r\n    container.rotation_num = 0\r\n    container.name = name\r\n    me.container_arr.splice(index_min, 0, {\r\n      cont: container,\r\n      index: index_arr[0],\r\n      name: name,\r\n      m_comp_name: m_comp_name\r\n    })\r\n    // 将数组容器里的index排序\r\n    me.sortContainerArr(true)\r\n    me.createAssociationRect(container, name, render_create)\r\n  },\r\n  createAssociationRect: function (container, name, render_create) {\r\n    const me = this\r\n    let x_arr = []\r\n    let y_arr = []\r\n    for (let i = 0; i < me.ctrl_arr.length; i++) {\r\n      let vertexData = me.ctrl_arr[i].vertexData\r\n      for (let k = 0; k < vertexData.length; k++) {\r\n        if (k % 2 == 0 || k == 0) {\r\n          x_arr.push(vertexData[k])\r\n        } else {\r\n          y_arr.push(vertexData[k])\r\n        }\r\n      }\r\n    }\r\n    x_arr.sort(function (a, b) {\r\n      return a - b\r\n    })\r\n    y_arr.sort(function (a, b) {\r\n      return a - b\r\n    })\r\n    let width = x_arr[x_arr.length - 1] - x_arr[0]\r\n    let height = y_arr[y_arr.length - 1] - y_arr[0]\r\n    // 设置父级矩形容器的位置\r\n    container.position.set(0, 0)\r\n    // 创建矩形\r\n    let rectangle = new PIXI.Graphics()\r\n    rectangle.interactive = true\r\n    // rectangle.buttonMode = true;\r\n    rectangle.width = width\r\n    rectangle.height = height\r\n    rectangle.originalw = width\r\n    rectangle.originalh = height\r\n    rectangle.beginFill(0xE6E6FA, 0.1)\r\n    rectangle.alpha = 0.01\r\n    // rectangle.pivot.set(0.5,0.5);\r\n    rectangle.drawRect(0, 0, width, height)\r\n    rectangle.endFill()\r\n    rectangle.name = name\r\n    rectangle.association_name = name\r\n    rectangle.lock = false\r\n    // 正式组合的空白矩形\r\n    rectangle.type = 'association_gap_notT'\r\n    rectangle.rotation_num = 0\r\n    rectangle.x = x_arr[0] - (me.window_w - me.canvas_width) / 2\r\n    rectangle.y = y_arr[0] - (me.window_h - me.canvas_height) / 2\r\n    rectangle.cursor = 'grab'\r\n    // 矩形中心点\r\n    rectangle.centerX = rectangle.x + rectangle.width / 2\r\n    rectangle.centerY = rectangle.y + rectangle.height / 2\r\n    me.ctrl_arr.push(rectangle) // 没有顺序之分\r\n    container.addChild(rectangle)\r\n  },\r\n  addACtrlarr: function (a_name) {\r\n    const me = this\r\n    for (let i = 0; i < me.container_arr.length; i++) {\r\n      if (me.container_arr[i].cont.children[0].association_name == a_name) {\r\n        me.ctrl_arr.push(me.container_arr[i].cont.children[0])\r\n      }\r\n    }\r\n  },\r\n  pushActiveLog: function (permit) {\r\n    /// 操作和数据存入日志\r\n    const me = this\r\n    // 存储当前画布内容以及是否有in_move或者组合激活\r\n    let ass_id = ''\r\n    let layer_data_example = {\r\n      m_comp_name: 'product',\r\n      children: [{\r\n        ass_children: [],\r\n        association_id: ''\r\n      }]\r\n    }\r\n    let obj_data_example = {\r\n      src: '',\r\n      type: '',\r\n      id: '',\r\n      m_comp_name: 'product',\r\n      rotation: 0,\r\n      scale: 1,\r\n      position: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      text: '',\r\n      style: {},\r\n      alpha: 1,\r\n      size: {},\r\n      skew: {}\r\n    }\r\n    let log_data = []\r\n    let data = {}\r\n    for (let i = 0; i < me.container_arr.length; i++) {\r\n      // 不把渲染好的弧形文字数据存储进日志，不存入模板数据\r\n      if (me.container_arr[i].cont.children[0].type !== 'temporary_rect' && me.container_arr[i].cont.children[0].type !== 'association_gap_notT') {\r\n        if (me.container_arr[i].cont.children[0].type == 'notSave' && i != me.container_arr.length - 1) {\r\n          continue\r\n        } else if (me.container_arr[i].cont.children[0].type == 'notSave' && i == me.container_arr.length - 1) {\r\n        } else {\r\n          let obj = me.container_arr[i].cont.children[0]\r\n          let element_data = _.cloneDeep(obj_data_example)\r\n          if (obj.association_name == '' || (obj.association_name !== '' && obj.association_name !== ass_id)) {\r\n            if (data.children && data.children[0].ass_children.length >= 1) {\r\n              log_data.push(data)\r\n            }\r\n            data = _.cloneDeep(layer_data_example)\r\n          }\r\n          if (obj.association_name !== '') {\r\n            data.children[0].association_id = obj.association_name\r\n            ass_id = obj.association_name\r\n          }\r\n          if (obj.type == 'image') {\r\n            element_data.src = obj.srcData\r\n            element_data.type = 'image'\r\n            element_data.file_id = obj.file_id\r\n            element_data.size.width = obj.width\r\n            element_data.size.height = obj.height\r\n          } else if (obj.type == 'text') {\r\n            element_data.type = 'text'\r\n            let style = {\r\n              fontFamily: 'default',\r\n              fontSize: 50,\r\n              lineHeight: 60,\r\n              fontStyle: 'normal',\r\n              fontWeight: 'bold',\r\n              fill: '#000',\r\n              stroke: '#000',\r\n              strokeThickness: 0,\r\n              dropShadow: false,\r\n              dropShadowColor: '#000000',\r\n              dropShadowAngle: Math.PI / 6,\r\n              dropShadowBlur: 0,\r\n              dropShadowDistance: 18,\r\n              wordWrap: true,\r\n              wordWrapWidth: 300,\r\n              breakWords: true,\r\n              padding: 50,\r\n              textBaseline: 'Middle',\r\n              trim: false,\r\n              whiteSpace: 'normal',\r\n              leading: 0,\r\n              letterSpacing: 0,\r\n              align: 'left'\r\n            }\r\n            for (let key in style) {\r\n              style[key] = obj.style[key]\r\n            }\r\n            element_data.style = style\r\n            element_data.style.fontSize = Math.floor(element_data.style.fontSize)\r\n            element_data.text = obj.text\r\n            element_data.size.width = obj.width\r\n            element_data.size.height = obj.height\r\n            element_data.textReplace = obj.textReplace\r\n          }\r\n          element_data.id = obj.name\r\n          element_data.rotation = obj.rotation\r\n          element_data.scale = obj.scale.x\r\n          element_data.position.x = obj.parent.x\r\n          element_data.position.y = obj.parent.y\r\n          element_data.alpha = obj.alpha\r\n          element_data.role = obj.role\r\n          element_data.skew = {\r\n            x: obj.skew.x,\r\n            y: obj.skew.y\r\n          }\r\n          element_data.hueNumber = obj.hueNumber || 0\r\n          data.children[0].ass_children.push(element_data)\r\n        }\r\n        if (i == me.container_arr.length - 1) {\r\n          log_data.push(data)\r\n        }\r\n      }\r\n    }\r\n    if (me.active_log.length >= 30) {\r\n      me.active_log.splice(0, 1)\r\n    }\r\n    me.active_log.push(log_data)\r\n  },\r\n  saveMould: function (mould_name) {\r\n    const me = this\r\n    // 保存模板，第一步保存个个元素或组合为素材（图片组合需要生成预览图），第二步将所有素材id上传保存成新模板\r\n    let last = _.cloneDeep(me.active_log[me.active_log.length - 1])\r\n    me.getMaterialData(last).then(function (res) {\r\n      let material_data = res\r\n      me.uploadMaterial(mould_name, material_data)\r\n    }).catch((res) => {\r\n      me.reject(res)\r\n    })\r\n  },\r\n  getMaterialData: function (last) {\r\n    const me = this\r\n    let allArr = []\r\n    for (let i = 0; i < last.length; i++) {\r\n      allArr.push(me.getMd(last[i]))\r\n    }\r\n    return Promise.all(allArr)\r\n  },\r\n  getMd: function (last) {\r\n    const me = this\r\n    return new Promise(function (resolve, reject) {\r\n      let material_children = {}\r\n      if (last.children[0].ass_children.length == 1) {\r\n        // 单个图片或者文字\r\n        if (last.children[0].ass_children[0].type == 'image') {\r\n          material_children.material_type = 'img'\r\n          material_children.file_id = JSON.stringify([parseInt(last.children[0].ass_children[0].file_id)])\r\n          material_children.author = '1'\r\n          material_children.preview = parseInt(last.children[0].ass_children[0].file_id)\r\n          material_children.content = JSON.stringify(last)\r\n        } else if (last.children[0].ass_children[0].type == 'text') {\r\n          material_children['material_type'] = 'text'\r\n          material_children['author'] = '1'\r\n          material_children['dimension_id'] = 0\r\n          material_children['content'] = JSON.stringify(last)\r\n          material_children['text_content'] = last.children[0].ass_children[0].text\r\n        }\r\n        resolve(material_children)\r\n      } else if (last.children[0].ass_children.length > 1) {\r\n        let file_id = []\r\n        for (let k = 0; k < last.children[0].ass_children.length; k++) {\r\n          if (last.children[0].ass_children[k].type == 'image') {\r\n            file_id.push(last.children[0].ass_children[k].file_id)\r\n          }\r\n        }\r\n        material_children.material_type = 'whole'\r\n        material_children.file_id = JSON.stringify(file_id)\r\n        material_children.author = '1'\r\n        // idToimg,上传组合预览图\r\n        me.addACtrlarr.bind(me)(file_id[0])\r\n        let file = me.toImage(true)\r\n        let formdata = new FormData()\r\n        formdata.append('upload_file_once', file)\r\n        axios({\r\n          method: 'post',\r\n          url: '//ht.idealead.hbindex.com/api/files/upload_file_once/author_id/1.html',\r\n          data: formdata,\r\n          headers: { 'my_flag': '1' }\r\n        }).then(function (response) {\r\n          material_children.preview = response.data.data.file_id\r\n          material_children.content = JSON.stringify(last)\r\n          resolve(material_children)\r\n        }).catch(function (error) {\r\n          me.reject(error)\r\n        })\r\n      }\r\n    })\r\n  },\r\n  toImage: function (returnFile) {\r\n    // 组合或者单个元素导成图片\r\n    const me = this\r\n    let width; let height; let centerX; let centerY = 0\r\n    let img_arr = []\r\n    if (me.ctrl_arr.length > 0) {\r\n      for (let i = 0; i < me.ctrl_arr.length; i++) {\r\n        if (me.ctrl_arr[i].type == 'association_gap_notT') {\r\n          width = me.ctrl_arr[i].width\r\n          height = me.ctrl_arr[i].height\r\n          centerX = me.ctrl_arr[i].centerX\r\n          centerY = me.ctrl_arr[i].centerY\r\n        }\r\n      }\r\n      for (let i = 0; i < me.ctrl_arr.length; i++) {\r\n        let data = {}\r\n        if (me.ctrl_arr[i].type !== 'association_gap_notT' && me.ctrl_arr[i].type !== 'text') {\r\n          data = {\r\n            src: me.ctrl_arr[i].srcData,\r\n            x: (width / 2) - (centerX - me.ctrl_arr[i].parent.x),\r\n            y: (height / 2) - (centerY - me.ctrl_arr[i].parent.y),\r\n            scale: me.ctrl_arr[i].scale.x,\r\n            rotation: me.ctrl_arr[i].parent.rotation,\r\n            type: me.ctrl_arr[i].type,\r\n            alpha: me.ctrl_arr[i].alpha\r\n          }\r\n          img_arr.push(data)\r\n        } else if (me.ctrl_arr[i].type == 'text') {\r\n          data = _.cloneDeep(me.ctrl_arr[i])\r\n          data.position.set((width / 2) - (centerX - me.ctrl_arr[i].parent.position.x), (height / 2) - (centerY - me.ctrl_arr[i].parent.position.y))\r\n          img_arr.push(data)\r\n        }\r\n      }\r\n    }\r\n    me.img_app = null\r\n    me.img_app = new PIXI.Application({\r\n      backgroundColor: 0xff0000,\r\n      width: width,\r\n      height: height,\r\n      antialias: 1\r\n    })\r\n    let cont = new PIXI.Container()\r\n    cont.width = width\r\n    cont.height = height\r\n    cont.position.set(0, 0)\r\n    cont = me.addImgTwo(cont, img_arr)\r\n    me.img_app.stage.addChild(cont)\r\n    let img = me.img_app.renderer.plugins.extract.base64(me.img_app.stage)\r\n    if (!returnFile) {\r\n\r\n    } else {\r\n      // 图片转文件，上传文件，拿回文件id\r\n      return me.dataURLtoFile(img, 'association_img.png')\r\n    }\r\n  },\r\n  addImgTwo: function (cont, img_arr) {\r\n    const me = this\r\n    img_arr = img_arr.reverse()\r\n    for (let i = 0; i < img_arr.length; i++) {\r\n      if (img_arr[i].type !== 'text') {\r\n        let sprite = new PIXI.Sprite(me.r_app.loader.resources[img_arr[i].src].texture)\r\n        sprite.anchor.set(0.5)\r\n        sprite.position.set(img_arr[i].x, img_arr[i].y)\r\n        sprite.scale.set(img_arr[i].scale)\r\n        sprite.rotation = img_arr[i].rotation\r\n        sprite.alpha = img_arr[i].alpha\r\n        cont.addChild(sprite)\r\n      } else if (img_arr[i].type == 'text') {\r\n        cont.addChild(img_arr[i])\r\n      }\r\n    }\r\n    return cont\r\n  },\r\n  dataURLtoFile: function (dataurl, filename) {\r\n    var arr = dataurl.split(',')\r\n    var mime = arr[0].match(/:(.*?);/)[1]\r\n    var bstr = atob(arr[1])\r\n    var n = bstr.length\r\n    var u8arr = new Uint8Array(n)\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n)\r\n    }\r\n    // 转换成file对象\r\n    return new File([u8arr], filename, { type: mime })\r\n  },\r\n  uploadMaterial: function (mould_name, material_data) {\r\n    const me = this\r\n    // 上传素材\r\n    me.material_id.length = 0\r\n    me.uploadAllMaterial(material_data).then(function (res) {\r\n      // 获取元素id，用于上传模板\r\n      for (let i = 0; i < res.length; i++) {\r\n        me.material_id.push(parseInt(res[i].data.data.materialId))\r\n      }\r\n      me.uploadTemp(mould_name)\r\n    }).catch(function (err) {\r\n      me.reject(err)\r\n    })\r\n  },\r\n  uploadMF: function (data) {\r\n    return axios({\r\n      method: 'post',\r\n      url: '//ht.idealead.hbindex.com/api/material/upload_material.html',\r\n      data: data,\r\n      headers: { 'my_flag': '1' }\r\n    })\r\n  },\r\n  uploadAllMaterial: function (material_data) {\r\n    const me = this\r\n    let allArr = []\r\n    for (let i = 0; i < material_data.length; i++) {\r\n      allArr.push(me.uploadMF(material_data[i]))\r\n    }\r\n    return Promise.all(allArr)\r\n  },\r\n  uploadImgF: function (formdata, wantF, funcData) {\r\n    // 上传图片功能函数，formdata为图片表单，wanF为回调执行方法，funcData为回调传入的函数\r\n    const me = this\r\n    return axios({\r\n      method: 'post',\r\n      url: '//ht.idealead.hbindex.com/api/files/upload_file_once/author_id/1.html',\r\n      data: formdata,\r\n      headers: { 'my_flag': '1' }\r\n    }).then(function (response) {\r\n      wantF.bind(me)(response, funcData)\r\n    }).catch(function (error) {\r\n      me.reject(error)\r\n    })\r\n  },\r\n  axiosTempF: function (response, funcData) {\r\n    const me = this\r\n    // 分为用户模板保存，渲染临时模板保存\r\n    let tempData = {\r\n      preview: response.data.data.file_id,\r\n      author: 1,\r\n      material_content: JSON.stringify(funcData.material_id),\r\n      name: funcData.mould_name,\r\n      condition: 1,\r\n      t_width: me.canvas_width,\r\n      t_height: me.canvas_height,\r\n      level: 'temporary',\r\n      father_id: me.father_id\r\n    }\r\n    // 用户修改的模板绑定根id\r\n    // 有素材集，模板预览图id，模板名称，用户id，可以真正上传模板了\r\n    axios({\r\n      method: 'post',\r\n      url: '//ht.idealead.hbindex.com/api/template/upload_template.html',\r\n      data: tempData,\r\n      headers: { 'my_flag': '1' }\r\n    }).then(function (res) {\r\n      let callbackData = {\r\n        origin_preview_img: me.origin_preview_img,\r\n        renderTempId: res.data.data.templateId,\r\n        render_preview_img: response.data.data.savepath\r\n      }\r\n      me.r_app.stage.removeChildren()\r\n      me.resolve(callbackData)\r\n    }).catch(function (error) {\r\n      me.reject(error)\r\n    })\r\n  },\r\n  uploadTemp: function (mould_name) {\r\n    const me = this\r\n    // 判断是否有弧形标题副标题，直接把素材id加入↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\r\n    if (me.arc_titleMid != '') {\r\n      me.material_id.splice(me.arc_titleMid_index, 0, me.arc_titleMid)\r\n    }\r\n    if (me.arc_subtitleMid != '') {\r\n      me.material_id.splice(me.arc_subtitleMid_index, 0, me.arc_subtitleMid)\r\n    }\r\n    // 上传模板\r\n    // 上传模板预览图文件\r\n    // let preview = ''\r\n    let img = null\r\n    // tempF.downloadImg.bind(me)(r_app.renderer.plugins.extract.base64(r_app.stage))\r\n    me.ClippingImage(me.r_app.renderer.plugins.extract.base64(me.r_app.stage, 'image/jpeg', 1), me.canvas_width, me.canvas_height, 0.9, function (base64Result) {\r\n      // me.downloadImg(base64Result)\r\n      // 图片转文件，上传文件，拿回文件id\r\n      img = me.dataURLtoFile(base64Result, 'mould.jpg')\r\n      let formdata = new FormData()\r\n      formdata.append('upload_file_once', img)\r\n      me.uploadImgF(formdata, me.axiosTempF, { material_id: me.material_id, mould_name: mould_name })\r\n    })\r\n  },\r\n  downloadImg: function (imgsrc) {\r\n    fetch(imgsrc).then(res => res.blob().then(blob => {\r\n      var a = document.createElement('a')\r\n      var url = window.URL.createObjectURL(blob)\r\n      var filename = 'myImg.png'\r\n      a.href = url\r\n      a.download = filename\r\n      a.click()\r\n      window.URL.revokeObjectURL(url)\r\n    }))\r\n  },\r\n  ClippingImage: function (base64Codes, width, height, quality, callback) {\r\n    const me = this\r\n    var img = new Image()\r\n    img.src = base64Codes\r\n    // 生成canvas\r\n    var canvas = document.createElement('canvas')\r\n    var ctx = canvas.getContext('2d')\r\n    var createw = document.createAttribute('width')\r\n    var createh = document.createAttribute('height')\r\n    createw.nodeValue = width\r\n    createh.nodeValue = height\r\n    canvas.setAttributeNode(createh)\r\n    canvas.setAttributeNode(createw)\r\n    img.onload = function () {\r\n      ctx.drawImage(img, (me.window_w - me.canvas_width) / 2, (me.window_h - me.canvas_height) / 2, width, height, 0, 0, width, height)\r\n      var base64Result = canvas.toDataURL('image/jpeg', quality)\r\n      callback(base64Result)\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}